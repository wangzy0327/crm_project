<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wzy.crm.dao.StaffMapper" >
  <resultMap id="BaseResultMap" type="com.wzy.crm.pojo.Staff" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="wx" property="wx" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from staff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wzy.crm.pojo.Staff" useGeneratedKeys="true" keyProperty="id">
    insert into staff (id, role, `name`,username,
      password, age, wx, 
      email, phone, update_time
      )
    values (#{id}, #{role}, #{name},#{username}
      #{password}, #{age}, #{wx},
      #{email}, #{phone}, now()
     )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wzy.crm.pojo.Staff" >
    update staff
    set
    <if test="role != null and role != ''">
      role = #{role,jdbcType=INTEGER},
    </if>
    <if test="name != null and name != ''">
      `name` = #{name,jdbcType=VARCHAR},
    </if>
    <if test="age != null and age != ''">
      age = #{age,jdbcType=INTEGER},
    </if>
    <if test="wx != null and wx != ''">
      `wx` = #{wx,jdbcType=VARCHAR},
    </if>
    <if test="email != null and email != ''">
      email = #{email,jdbcType=VARCHAR},
    </if>
    <if test="phone != null and phone != ''">
      phone = #{phone,jdbcType=VARCHAR},
    </if>
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectStaffByParam" parameterType="map" resultMap="BaseResultMap">
    SELECT id,`name`,username,role,age,wx,phone,email,update_time
    FROM staff
    <where>
      <if test="keyword != null and keyword != ''">
        AND CONCAT(`name`,`wx`) LIKE #{keyword}
      </if>
      <if test="startTime != null and startTime != ''">
        AND `update_time` <![CDATA[>=]]> #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        AND `update_time` <![CDATA[<=]]> #{endTime}
      </if>
    </where>
    ORDER BY ${orderColumn} ${orderType}
    limit ${start},${length}
  </select>
  <select id="findStaffCount" resultType="int">
    SELECT COUNT(*) FROM staff
  </select>
  <select id="findStaffCountByParam" resultType="int">
    SELECT COUNT(*) FROM staff
    <where>
      <if test="keyword != null and keyword != ''">
        AND CONCAT(`name`,`wx`) LIKE #{keyword}
      </if>
      <if test="startTime != null and startTime != ''">
        AND `update_time` <![CDATA[>=]]> #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        AND `update_time` <![CDATA[<=]]> #{endTime}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, role, `name`,username, password, age, wx, email, phone, update_time
    from staff
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPhone" resultMap="BaseResultMap" parameterType="string">
    select id,role,`name`,username,password,age,wx,email,phone
    from staff
    where phone = #{phone}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, role, `name`,username, age, wx, email, phone, update_time
    from staff
    order by update_time desc;
  </select>
</mapper>